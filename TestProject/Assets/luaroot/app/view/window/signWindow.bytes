local SignWindow = class("SignWindow", import("cframework.mvc.BaseWindow"))

function SignWindow:Start()
	log("SignWindow start")
	self:addEvent(EventType.Click, self.uiRoot.Btn_close, handler(self, self.onClose))
	
	self:bindData()
end

function SignWindow:onEnterTransitionFinish()
end

function SignWindow:listNotificationInterests()
    return {Message.BEAUTY}
end

function SignWindow:handleNotification(id, sid, data)
	
	if sid == Message.BEAUTY_GET_TEACH then
	end
--	
end

function SignWindow:bindData()

    local row_count = math.ceil( #api.ItemData.itemList / 9)

	if self.tableView == nil then
		
		self.tableView = api:createTableView(self.uiRoot.Scv_content, 104, row_count, handler(self,self.bindListRow))
		self.tableView:SetItemSkin(api:getAsset("prefabs/SignWindow_Item", "SignWindow_Item"))

	else
		self.tableView:SetItemCount(row_count)
	end

	self.tableView:UpdateView()

end

function SignWindow:bindListRow(cell, index, isNew)
	
	local cellNum = 9
	if isNew == true then

		cell.name = "SignWindow_Item"..index

	end
	
	for i = 1, cellNum do

		local item_cell = index * cellNum + i
		local itemInfo = api.ItemData.itemList[item_cell]
		
		if itemInfo == nil then
			
			cell:GetChild("Item"..i):SetActive(false)
		else

			cell:GetChild("Item"..i):SetActive(true)
		
		
			local Btn_icon = cell:GetChild("Btn_icon"..i)
			local Txt_num = cell:GetChild("Txt_num"..i)
			
			api:setImage("SignWindow", Btn_icon, "dongtai/item/item_20001", "item_20001", false)
			api:setText(Txt_num, item_cell)
			
			-- 注册事件

			if isNew == true then
				
				cell:AddClickEvent("SignWindow", cell.name, "Btn_icon"..i, function ()
					--物品详情
					local item_cell = cell.CellIndex * cellNum + i
					log(item_cell)
				end)
				
				
			end
		end


	end
	
end

function SignWindow:onClose(target)
	--target 事件对象
	log("on exit---------------------------")
	self:close()
end

function SignWindow:Dispose()
	log("dispose")
	self.tableView = nil
end

return SignWindow